
format2:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 5f db             	add    %bl,-0x25(%edi)
 804819a:	32 ba 54 3b d4 5d    	xor    0x5dd43b54(%edx),%bh
 80481a0:	66                   	data16
 80481a1:	79 29                	jns    80481cc <_init-0x1ac>
 80481a3:	48                   	dec    %eax
 80481a4:	6a 15                	push   $0x15
 80481a6:	35 87 27 da 4b       	xor    $0x4bda2787,%eax
 80481ab:	de                   	.byte 0xde

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	0a 00                	or     (%eax),%al
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 0a                	add    %cl,(%edx)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00                   	.byte 0x0
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x1ec>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	63 00                	arpl   %ax,(%eax)
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	12 00                	adc    (%eax),%al
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	47                   	inc    %edi
	...
 80481f5:	00 00                	add    %al,(%eax)
 80481f7:	00 12                	add    %dl,(%edx)
 80481f9:	00 00                	add    %al,(%eax)
 80481fb:	00 40 00             	add    %al,0x0(%eax)
	...
 8048206:	00 00                	add    %al,(%eax)
 8048208:	12 00                	adc    (%eax),%al
 804820a:	00 00                	add    %al,(%eax)
 804820c:	01 00                	add    %eax,(%eax)
	...
 8048216:	00 00                	add    %al,(%eax)
 8048218:	20 00                	and    %al,(%eax)
 804821a:	00 00                	add    %al,(%eax)
 804821c:	29 00                	sub    %eax,(%eax)
	...
 8048226:	00 00                	add    %al,(%eax)
 8048228:	12 00                	adc    (%eax),%al
 804822a:	00 00                	add    %al,(%eax)
 804822c:	4f                   	dec    %edi
	...
 8048235:	00 00                	add    %al,(%eax)
 8048237:	00 12                	add    %dl,(%edx)
 8048239:	00 00                	add    %al,(%eax)
 804823b:	00 61 00             	add    %ah,0x0(%ecx)
	...
 8048246:	00 00                	add    %al,(%eax)
 8048248:	12 00                	adc    (%eax),%al
 804824a:	00 00                	add    %al,(%eax)
 804824c:	2e 00 00             	add    %al,%cs:(%eax)
	...
 8048257:	00 12                	add    %dl,(%edx)
 8048259:	00 00                	add    %al,(%eax)
 804825b:	00 36                	add    %dh,(%esi)
	...
 8048265:	00 00                	add    %al,(%eax)
 8048267:	00 12                	add    %dl,(%edx)
 8048269:	00 00                	add    %al,(%eax)
 804826b:	00 1a                	add    %bl,(%edx)
 804826d:	00 00                	add    %al,(%eax)
 804826f:	00 6c 86 04          	add    %ch,0x4(%esi,%eax,4)
 8048273:	08 04 00             	or     %al,(%eax,%eax,1)
 8048276:	00 00                	add    %al,(%eax)
 8048278:	11 00                	adc    %eax,(%eax)
 804827a:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

0804827c <.dynstr>:
 804827c:	00 5f 5f             	add    %bl,0x5f(%edi)
 804827f:	67 6d                	insl   (%dx),%es:(%di)
 8048281:	6f                   	outsl  %ds:(%esi),(%dx)
 8048282:	6e                   	outsb  %ds:(%esi),(%dx)
 8048283:	5f                   	pop    %edi
 8048284:	73 74                	jae    80482fa <_init-0x7e>
 8048286:	61                   	popa   
 8048287:	72 74                	jb     80482fd <_init-0x7b>
 8048289:	5f                   	pop    %edi
 804828a:	5f                   	pop    %edi
 804828b:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 804828f:	63 2e                	arpl   %bp,(%esi)
 8048291:	73 6f                	jae    8048302 <_init-0x76>
 8048293:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 8048298:	4f                   	dec    %edi
 8048299:	5f                   	pop    %edi
 804829a:	73 74                	jae    8048310 <_init-0x68>
 804829c:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 80482a3:	64 
 80482a4:	00 65 78             	add    %ah,0x78(%ebp)
 80482a7:	69 74 00 70 75 74 63 	imul   $0x68637475,0x70(%eax,%eax,1),%esi
 80482ae:	68 
 80482af:	61                   	popa   
 80482b0:	72 00                	jb     80482b2 <_init-0xc6>
 80482b2:	73 65                	jae    8048319 <_init-0x5f>
 80482b4:	74 72                	je     8048328 <_init-0x50>
 80482b6:	65                   	gs
 80482b7:	73 67                	jae    8048320 <_init-0x58>
 80482b9:	69 64 00 73 79 73 74 	imul   $0x65747379,0x73(%eax,%eax,1),%esp
 80482c0:	65 
 80482c1:	6d                   	insl   (%dx),%es:(%edi)
 80482c2:	00 67 65             	add    %ah,0x65(%edi)
 80482c5:	74 65                	je     804832c <_init-0x4c>
 80482c7:	67 69 64 00 5f 5f 6c 	imul   $0x696c5f5f,0x0(%si),%esp
 80482ce:	69 
 80482cf:	62 63 5f             	bound  %esp,0x5f(%ebx)
 80482d2:	73 74                	jae    8048348 <_init-0x30>
 80482d4:	61                   	popa   
 80482d5:	72 74                	jb     804834b <_init-0x2d>
 80482d7:	5f                   	pop    %edi
 80482d8:	6d                   	insl   (%dx),%es:(%edi)
 80482d9:	61                   	popa   
 80482da:	69 6e 00 73 6e 70 72 	imul   $0x72706e73,0x0(%esi),%ebp
 80482e1:	69 6e 74 66 00 47 4c 	imul   $0x4c470066,0x74(%esi),%ebp
 80482e8:	49                   	dec    %ecx
 80482e9:	42                   	inc    %edx
 80482ea:	43                   	inc    %ebx
 80482eb:	5f                   	pop    %edi
 80482ec:	32 2e                	xor    (%esi),%ch
 80482ee:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

080482f0 <.gnu.version>:
 80482f0:	00 00                	add    %al,(%eax)
 80482f2:	02 00                	add    (%eax),%al
 80482f4:	02 00                	add    (%eax),%al
 80482f6:	02 00                	add    (%eax),%al
 80482f8:	00 00                	add    %al,(%eax)
 80482fa:	02 00                	add    (%eax),%al
 80482fc:	02 00                	add    (%eax),%al
 80482fe:	02 00                	add    (%eax),%al
 8048300:	02 00                	add    (%eax),%al
 8048302:	02 00                	add    (%eax),%al
 8048304:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

08048308 <.gnu.version_r>:
 8048308:	01 00                	add    %eax,(%eax)
 804830a:	01 00                	add    %eax,(%eax)
 804830c:	10 00                	adc    %al,(%eax)
 804830e:	00 00                	add    %al,(%eax)
 8048310:	10 00                	adc    %al,(%eax)
 8048312:	00 00                	add    %al,(%eax)
 8048314:	00 00                	add    %al,(%eax)
 8048316:	00 00                	add    %al,(%eax)
 8048318:	10 69 69             	adc    %ch,0x69(%ecx)
 804831b:	0d 00 00 02 00       	or     $0x20000,%eax
 8048320:	6a 00                	push   $0x0
 8048322:	00 00                	add    %al,(%eax)
 8048324:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

08048328 <.rel.dyn>:
 8048328:	f0 9f                	lock lahf 
 804832a:	04 08                	add    $0x8,%al
 804832c:	06                   	push   %es
 804832d:	04 00                	add    $0x0,%al
	...

Disassembly of section .rel.plt:

08048330 <.rel.plt>:
 8048330:	00 a0 04 08 07 01    	add    %ah,0x1070804(%eax)
 8048336:	00 00                	add    %al,(%eax)
 8048338:	04 a0                	add    $0xa0,%al
 804833a:	04 08                	add    $0x8,%al
 804833c:	07                   	pop    %es
 804833d:	02 00                	add    (%eax),%al
 804833f:	00 08                	add    %cl,(%eax)
 8048341:	a0 04 08 07 03       	mov    0x3070804,%al
 8048346:	00 00                	add    %al,(%eax)
 8048348:	0c a0                	or     $0xa0,%al
 804834a:	04 08                	add    $0x8,%al
 804834c:	07                   	pop    %es
 804834d:	04 00                	add    $0x0,%al
 804834f:	00 10                	add    %dl,(%eax)
 8048351:	a0 04 08 07 05       	mov    0x5070804,%al
 8048356:	00 00                	add    %al,(%eax)
 8048358:	14 a0                	adc    $0xa0,%al
 804835a:	04 08                	add    $0x8,%al
 804835c:	07                   	pop    %es
 804835d:	06                   	push   %es
 804835e:	00 00                	add    %al,(%eax)
 8048360:	18 a0 04 08 07 07    	sbb    %ah,0x7070804(%eax)
 8048366:	00 00                	add    %al,(%eax)
 8048368:	1c a0                	sbb    $0xa0,%al
 804836a:	04 08                	add    $0x8,%al
 804836c:	07                   	pop    %es
 804836d:	08 00                	or     %al,(%eax)
 804836f:	00 20                	add    %ah,(%eax)
 8048371:	a0 04 08 07 09       	mov    0x9070804,%al
	...

Disassembly of section .init:

08048378 <_init>:
 8048378:	53                   	push   %ebx
 8048379:	83 ec 08             	sub    $0x8,%esp
 804837c:	e8 00 00 00 00       	call   8048381 <_init+0x9>
 8048381:	5b                   	pop    %ebx
 8048382:	81 c3 73 1c 00 00    	add    $0x1c73,%ebx
 8048388:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804838e:	85 c0                	test   %eax,%eax
 8048390:	74 05                	je     8048397 <_init+0x1f>
 8048392:	e8 59 00 00 00       	call   80483f0 <__gmon_start__@plt>
 8048397:	e8 44 01 00 00       	call   80484e0 <frame_dummy>
 804839c:	e8 7f 02 00 00       	call   8048620 <__do_global_ctors_aux>
 80483a1:	83 c4 08             	add    $0x8,%esp
 80483a4:	5b                   	pop    %ebx
 80483a5:	c3                   	ret    

Disassembly of section .plt:

080483b0 <printf@plt-0x10>:
 80483b0:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 80483b6:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 80483bc:	00 00                	add    %al,(%eax)
	...

080483c0 <printf@plt>:
 80483c0:	ff 25 00 a0 04 08    	jmp    *0x804a000
 80483c6:	68 00 00 00 00       	push   $0x0
 80483cb:	e9 e0 ff ff ff       	jmp    80483b0 <_init+0x38>

080483d0 <getegid@plt>:
 80483d0:	ff 25 04 a0 04 08    	jmp    *0x804a004
 80483d6:	68 08 00 00 00       	push   $0x8
 80483db:	e9 d0 ff ff ff       	jmp    80483b0 <_init+0x38>

080483e0 <system@plt>:
 80483e0:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80483e6:	68 10 00 00 00       	push   $0x10
 80483eb:	e9 c0 ff ff ff       	jmp    80483b0 <_init+0x38>

080483f0 <__gmon_start__@plt>:
 80483f0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483f6:	68 18 00 00 00       	push   $0x18
 80483fb:	e9 b0 ff ff ff       	jmp    80483b0 <_init+0x38>

08048400 <exit@plt>:
 8048400:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048406:	68 20 00 00 00       	push   $0x20
 804840b:	e9 a0 ff ff ff       	jmp    80483b0 <_init+0x38>

08048410 <__libc_start_main@plt>:
 8048410:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048416:	68 28 00 00 00       	push   $0x28
 804841b:	e9 90 ff ff ff       	jmp    80483b0 <_init+0x38>

08048420 <snprintf@plt>:
 8048420:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048426:	68 30 00 00 00       	push   $0x30
 804842b:	e9 80 ff ff ff       	jmp    80483b0 <_init+0x38>

08048430 <putchar@plt>:
 8048430:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048436:	68 38 00 00 00       	push   $0x38
 804843b:	e9 70 ff ff ff       	jmp    80483b0 <_init+0x38>

08048440 <setresgid@plt>:
 8048440:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048446:	68 40 00 00 00       	push   $0x40
 804844b:	e9 60 ff ff ff       	jmp    80483b0 <_init+0x38>

Disassembly of section .text:

08048450 <_start>:
 8048450:	31 ed                	xor    %ebp,%ebp
 8048452:	5e                   	pop    %esi
 8048453:	89 e1                	mov    %esp,%ecx
 8048455:	83 e4 f0             	and    $0xfffffff0,%esp
 8048458:	50                   	push   %eax
 8048459:	54                   	push   %esp
 804845a:	52                   	push   %edx
 804845b:	68 10 86 04 08       	push   $0x8048610
 8048460:	68 a0 85 04 08       	push   $0x80485a0
 8048465:	51                   	push   %ecx
 8048466:	56                   	push   %esi
 8048467:	68 2d 85 04 08       	push   $0x804852d
 804846c:	e8 9f ff ff ff       	call   8048410 <__libc_start_main@plt>
 8048471:	f4                   	hlt    
 8048472:	90                   	nop
 8048473:	90                   	nop
 8048474:	90                   	nop
 8048475:	90                   	nop
 8048476:	90                   	nop
 8048477:	90                   	nop
 8048478:	90                   	nop
 8048479:	90                   	nop
 804847a:	90                   	nop
 804847b:	90                   	nop
 804847c:	90                   	nop
 804847d:	90                   	nop
 804847e:	90                   	nop
 804847f:	90                   	nop

08048480 <__do_global_dtors_aux>:
 8048480:	55                   	push   %ebp
 8048481:	89 e5                	mov    %esp,%ebp
 8048483:	53                   	push   %ebx
 8048484:	83 ec 04             	sub    $0x4,%esp
 8048487:	80 3d 2c a0 04 08 00 	cmpb   $0x0,0x804a02c
 804848e:	75 3f                	jne    80484cf <__do_global_dtors_aux+0x4f>
 8048490:	a1 30 a0 04 08       	mov    0x804a030,%eax
 8048495:	bb 20 9f 04 08       	mov    $0x8049f20,%ebx
 804849a:	81 eb 1c 9f 04 08    	sub    $0x8049f1c,%ebx
 80484a0:	c1 fb 02             	sar    $0x2,%ebx
 80484a3:	83 eb 01             	sub    $0x1,%ebx
 80484a6:	39 d8                	cmp    %ebx,%eax
 80484a8:	73 1e                	jae    80484c8 <__do_global_dtors_aux+0x48>
 80484aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80484b0:	83 c0 01             	add    $0x1,%eax
 80484b3:	a3 30 a0 04 08       	mov    %eax,0x804a030
 80484b8:	ff 14 85 1c 9f 04 08 	call   *0x8049f1c(,%eax,4)
 80484bf:	a1 30 a0 04 08       	mov    0x804a030,%eax
 80484c4:	39 d8                	cmp    %ebx,%eax
 80484c6:	72 e8                	jb     80484b0 <__do_global_dtors_aux+0x30>
 80484c8:	c6 05 2c a0 04 08 01 	movb   $0x1,0x804a02c
 80484cf:	83 c4 04             	add    $0x4,%esp
 80484d2:	5b                   	pop    %ebx
 80484d3:	5d                   	pop    %ebp
 80484d4:	c3                   	ret    
 80484d5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80484d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080484e0 <frame_dummy>:
 80484e0:	55                   	push   %ebp
 80484e1:	89 e5                	mov    %esp,%ebp
 80484e3:	83 ec 18             	sub    $0x18,%esp
 80484e6:	a1 24 9f 04 08       	mov    0x8049f24,%eax
 80484eb:	85 c0                	test   %eax,%eax
 80484ed:	74 12                	je     8048501 <frame_dummy+0x21>
 80484ef:	b8 00 00 00 00       	mov    $0x0,%eax
 80484f4:	85 c0                	test   %eax,%eax
 80484f6:	74 09                	je     8048501 <frame_dummy+0x21>
 80484f8:	c7 04 24 24 9f 04 08 	movl   $0x8049f24,(%esp)
 80484ff:	ff d0                	call   *%eax
 8048501:	c9                   	leave  
 8048502:	c3                   	ret    
 8048503:	90                   	nop

08048504 <be_nice_to_people>:
 8048504:	55                   	push   %ebp
 8048505:	89 e5                	mov    %esp,%ebp
 8048507:	83 ec 28             	sub    $0x28,%esp
 804850a:	e8 c1 fe ff ff       	call   80483d0 <getegid@plt>
 804850f:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048512:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048515:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048519:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804851c:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048520:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048523:	89 04 24             	mov    %eax,(%esp)
 8048526:	e8 15 ff ff ff       	call   8048440 <setresgid@plt>
 804852b:	c9                   	leave  
 804852c:	c3                   	ret    

0804852d <main>:
 804852d:	55                   	push   %ebp
 804852e:	89 e5                	mov    %esp,%ebp
 8048530:	83 e4 f0             	and    $0xfffffff0,%esp
 8048533:	83 c4 80             	add    $0xffffff80,%esp
 8048536:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048539:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 804853d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048543:	89 44 24 7c          	mov    %eax,0x7c(%esp)
 8048547:	31 c0                	xor    %eax,%eax
 8048549:	e8 b6 ff ff ff       	call   8048504 <be_nice_to_people>
 804854e:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048552:	83 c0 04             	add    $0x4,%eax
 8048555:	8b 00                	mov    (%eax),%eax
 8048557:	89 44 24 08          	mov    %eax,0x8(%esp)
 804855b:	c7 44 24 04 46 00 00 	movl   $0x46,0x4(%esp)
 8048562:	00 
 8048563:	8d 44 24 2c          	lea    0x2c(%esp),%eax
 8048567:	89 04 24             	mov    %eax,(%esp)
 804856a:	e8 b1 fe ff ff       	call   8048420 <snprintf@plt>
 804856f:	8d 44 24 2c          	lea    0x2c(%esp),%eax
 8048573:	89 04 24             	mov    %eax,(%esp)
 8048576:	e8 45 fe ff ff       	call   80483c0 <printf@plt>
 804857b:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)
 8048582:	e8 a9 fe ff ff       	call   8048430 <putchar@plt>
 8048587:	c7 04 24 70 86 04 08 	movl   $0x8048670,(%esp)
 804858e:	e8 4d fe ff ff       	call   80483e0 <system@plt>
 8048593:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 804859a:	e8 61 fe ff ff       	call   8048400 <exit@plt>
 804859f:	90                   	nop

080485a0 <__libc_csu_init>:
 80485a0:	55                   	push   %ebp
 80485a1:	57                   	push   %edi
 80485a2:	56                   	push   %esi
 80485a3:	53                   	push   %ebx
 80485a4:	e8 69 00 00 00       	call   8048612 <__i686.get_pc_thunk.bx>
 80485a9:	81 c3 4b 1a 00 00    	add    $0x1a4b,%ebx
 80485af:	83 ec 1c             	sub    $0x1c,%esp
 80485b2:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 80485b6:	8d bb 20 ff ff ff    	lea    -0xe0(%ebx),%edi
 80485bc:	e8 b7 fd ff ff       	call   8048378 <_init>
 80485c1:	8d 83 20 ff ff ff    	lea    -0xe0(%ebx),%eax
 80485c7:	29 c7                	sub    %eax,%edi
 80485c9:	c1 ff 02             	sar    $0x2,%edi
 80485cc:	85 ff                	test   %edi,%edi
 80485ce:	74 29                	je     80485f9 <__libc_csu_init+0x59>
 80485d0:	31 f6                	xor    %esi,%esi
 80485d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80485d8:	8b 44 24 38          	mov    0x38(%esp),%eax
 80485dc:	89 2c 24             	mov    %ebp,(%esp)
 80485df:	89 44 24 08          	mov    %eax,0x8(%esp)
 80485e3:	8b 44 24 34          	mov    0x34(%esp),%eax
 80485e7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80485eb:	ff 94 b3 20 ff ff ff 	call   *-0xe0(%ebx,%esi,4)
 80485f2:	83 c6 01             	add    $0x1,%esi
 80485f5:	39 fe                	cmp    %edi,%esi
 80485f7:	75 df                	jne    80485d8 <__libc_csu_init+0x38>
 80485f9:	83 c4 1c             	add    $0x1c,%esp
 80485fc:	5b                   	pop    %ebx
 80485fd:	5e                   	pop    %esi
 80485fe:	5f                   	pop    %edi
 80485ff:	5d                   	pop    %ebp
 8048600:	c3                   	ret    
 8048601:	eb 0d                	jmp    8048610 <__libc_csu_fini>
 8048603:	90                   	nop
 8048604:	90                   	nop
 8048605:	90                   	nop
 8048606:	90                   	nop
 8048607:	90                   	nop
 8048608:	90                   	nop
 8048609:	90                   	nop
 804860a:	90                   	nop
 804860b:	90                   	nop
 804860c:	90                   	nop
 804860d:	90                   	nop
 804860e:	90                   	nop
 804860f:	90                   	nop

08048610 <__libc_csu_fini>:
 8048610:	f3 c3                	repz ret 

08048612 <__i686.get_pc_thunk.bx>:
 8048612:	8b 1c 24             	mov    (%esp),%ebx
 8048615:	c3                   	ret    
 8048616:	90                   	nop
 8048617:	90                   	nop
 8048618:	90                   	nop
 8048619:	90                   	nop
 804861a:	90                   	nop
 804861b:	90                   	nop
 804861c:	90                   	nop
 804861d:	90                   	nop
 804861e:	90                   	nop
 804861f:	90                   	nop

08048620 <__do_global_ctors_aux>:
 8048620:	55                   	push   %ebp
 8048621:	89 e5                	mov    %esp,%ebp
 8048623:	53                   	push   %ebx
 8048624:	83 ec 04             	sub    $0x4,%esp
 8048627:	a1 14 9f 04 08       	mov    0x8049f14,%eax
 804862c:	83 f8 ff             	cmp    $0xffffffff,%eax
 804862f:	74 13                	je     8048644 <__do_global_ctors_aux+0x24>
 8048631:	bb 14 9f 04 08       	mov    $0x8049f14,%ebx
 8048636:	66 90                	xchg   %ax,%ax
 8048638:	83 eb 04             	sub    $0x4,%ebx
 804863b:	ff d0                	call   *%eax
 804863d:	8b 03                	mov    (%ebx),%eax
 804863f:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048642:	75 f4                	jne    8048638 <__do_global_ctors_aux+0x18>
 8048644:	83 c4 04             	add    $0x4,%esp
 8048647:	5b                   	pop    %ebx
 8048648:	5d                   	pop    %ebp
 8048649:	c3                   	ret    
 804864a:	90                   	nop
 804864b:	90                   	nop

Disassembly of section .fini:

0804864c <_fini>:
 804864c:	53                   	push   %ebx
 804864d:	83 ec 08             	sub    $0x8,%esp
 8048650:	e8 00 00 00 00       	call   8048655 <_fini+0x9>
 8048655:	5b                   	pop    %ebx
 8048656:	81 c3 9f 19 00 00    	add    $0x199f,%ebx
 804865c:	e8 1f fe ff ff       	call   8048480 <__do_global_dtors_aux>
 8048661:	83 c4 08             	add    $0x8,%esp
 8048664:	5b                   	pop    %ebx
 8048665:	c3                   	ret    

Disassembly of section .rodata:

08048668 <_fp_hw>:
 8048668:	03 00                	add    (%eax),%eax
	...

0804866c <_IO_stdin_used>:
 804866c:	01 00                	add    %eax,(%eax)
 804866e:	02 00                	add    (%eax),%al
 8048670:	2f                   	das    
 8048671:	62 69 6e             	bound  %ebp,0x6e(%ecx)
 8048674:	2f                   	das    
 8048675:	6c                   	insb   (%dx),%es:(%edi)
 8048676:	73 00                	jae    8048678 <_IO_stdin_used+0xc>

Disassembly of section .eh_frame_hdr:

08048678 <.eh_frame_hdr>:
 8048678:	01 1b                	add    %ebx,(%ebx)
 804867a:	03 3b                	add    (%ebx),%edi
 804867c:	38 00                	cmp    %al,(%eax)
 804867e:	00 00                	add    %al,(%eax)
 8048680:	06                   	push   %es
 8048681:	00 00                	add    %al,(%eax)
 8048683:	00 38                	add    %bh,(%eax)
 8048685:	fd                   	std    
 8048686:	ff                   	(bad)  
 8048687:	ff 54 00 00          	call   *0x0(%eax,%eax,1)
 804868b:	00 8c fe ff ff 78 00 	add    %cl,0x78ffff(%esi,%edi,8)
 8048692:	00 00                	add    %al,(%eax)
 8048694:	b5 fe                	mov    $0xfe,%ch
 8048696:	ff                   	(bad)  
 8048697:	ff 98 00 00 00 28    	lcall  *0x28000000(%eax)
 804869d:	ff                   	(bad)  
 804869e:	ff                   	(bad)  
 804869f:	ff b4 00 00 00 98 ff 	pushl  -0x680000(%eax,%eax,1)
 80486a6:	ff                   	(bad)  
 80486a7:	ff f0                	push   %eax
 80486a9:	00 00                	add    %al,(%eax)
 80486ab:	00 9a ff ff ff 04    	add    %bl,0x4ffffff(%edx)
 80486b1:	01 00                	add    %eax,(%eax)
	...

Disassembly of section .eh_frame:

080486b4 <__FRAME_END__-0xdc>:
 80486b4:	14 00                	adc    $0x0,%al
 80486b6:	00 00                	add    %al,(%eax)
 80486b8:	00 00                	add    %al,(%eax)
 80486ba:	00 00                	add    %al,(%eax)
 80486bc:	01 7a 52             	add    %edi,0x52(%edx)
 80486bf:	00 01                	add    %al,(%ecx)
 80486c1:	7c 08                	jl     80486cb <_IO_stdin_used+0x5f>
 80486c3:	01 1b                	add    %ebx,(%ebx)
 80486c5:	0c 04                	or     $0x4,%al
 80486c7:	04 88                	add    $0x88,%al
 80486c9:	01 00                	add    %eax,(%eax)
 80486cb:	00 20                	add    %ah,(%eax)
 80486cd:	00 00                	add    %al,(%eax)
 80486cf:	00 1c 00             	add    %bl,(%eax,%eax,1)
 80486d2:	00 00                	add    %al,(%eax)
 80486d4:	dc fc                	fdivr  %st,%st(4)
 80486d6:	ff                   	(bad)  
 80486d7:	ff a0 00 00 00 00    	jmp    *0x0(%eax)
 80486dd:	0e                   	push   %cs
 80486de:	08 46 0e             	or     %al,0xe(%esi)
 80486e1:	0c 4a                	or     $0x4a,%al
 80486e3:	0f 0b                	ud2    
 80486e5:	74 04                	je     80486eb <_IO_stdin_used+0x7f>
 80486e7:	78 00                	js     80486e9 <_IO_stdin_used+0x7d>
 80486e9:	3f                   	aas    
 80486ea:	1a 3b                	sbb    (%ebx),%bh
 80486ec:	2a 32                	sub    (%edx),%dh
 80486ee:	24 22                	and    $0x22,%al
 80486f0:	1c 00                	sbb    $0x0,%al
 80486f2:	00 00                	add    %al,(%eax)
 80486f4:	40                   	inc    %eax
 80486f5:	00 00                	add    %al,(%eax)
 80486f7:	00 0c fe             	add    %cl,(%esi,%edi,8)
 80486fa:	ff                   	(bad)  
 80486fb:	ff 29                	ljmp   *(%ecx)
 80486fd:	00 00                	add    %al,(%eax)
 80486ff:	00 00                	add    %al,(%eax)
 8048701:	41                   	inc    %ecx
 8048702:	0e                   	push   %cs
 8048703:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048709:	65 c5 0c 04          	lds    %gs:(%esp,%eax,1),%ecx
 804870d:	04 00                	add    $0x0,%al
 804870f:	00 18                	add    %bl,(%eax)
 8048711:	00 00                	add    %al,(%eax)
 8048713:	00 60 00             	add    %ah,0x0(%eax)
 8048716:	00 00                	add    %al,(%eax)
 8048718:	15 fe ff ff 72       	adc    $0x72fffffe,%eax
 804871d:	00 00                	add    %al,(%eax)
 804871f:	00 00                	add    %al,(%eax)
 8048721:	41                   	inc    %ecx
 8048722:	0e                   	push   %cs
 8048723:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048729:	00 00                	add    %al,(%eax)
 804872b:	00 38                	add    %bh,(%eax)
 804872d:	00 00                	add    %al,(%eax)
 804872f:	00 7c 00 00          	add    %bh,0x0(%eax,%eax,1)
 8048733:	00 6c fe ff          	add    %ch,-0x1(%esi,%edi,8)
 8048737:	ff 61 00             	jmp    *0x0(%ecx)
 804873a:	00 00                	add    %al,(%eax)
 804873c:	00 41 0e             	add    %al,0xe(%ecx)
 804873f:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048745:	87 03                	xchg   %eax,(%ebx)
 8048747:	41                   	inc    %ecx
 8048748:	0e                   	push   %cs
 8048749:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804874f:	83 05 4e 0e 30 02 4a 	addl   $0x4a,0x2300e4e
 8048756:	0e                   	push   %cs
 8048757:	14 41                	adc    $0x41,%al
 8048759:	0e                   	push   %cs
 804875a:	10 c3                	adc    %al,%bl
 804875c:	41                   	inc    %ecx
 804875d:	0e                   	push   %cs
 804875e:	0c c6                	or     $0xc6,%al
 8048760:	41                   	inc    %ecx
 8048761:	0e                   	push   %cs
 8048762:	08 c7                	or     %al,%bh
 8048764:	41                   	inc    %ecx
 8048765:	0e                   	push   %cs
 8048766:	04 c5                	add    $0xc5,%al
 8048768:	10 00                	adc    %al,(%eax)
 804876a:	00 00                	add    %al,(%eax)
 804876c:	b8 00 00 00 a0       	mov    $0xa0000000,%eax
 8048771:	fe                   	(bad)  
 8048772:	ff                   	(bad)  
 8048773:	ff 02                	incl   (%edx)
 8048775:	00 00                	add    %al,(%eax)
 8048777:	00 00                	add    %al,(%eax)
 8048779:	00 00                	add    %al,(%eax)
 804877b:	00 10                	add    %dl,(%eax)
 804877d:	00 00                	add    %al,(%eax)
 804877f:	00 cc                	add    %cl,%ah
 8048781:	00 00                	add    %al,(%eax)
 8048783:	00 8e fe ff ff 04    	add    %cl,0x4fffffe(%esi)
 8048789:	00 00                	add    %al,(%eax)
 804878b:	00 00                	add    %al,(%eax)
 804878d:	00 00                	add    %al,(%eax)
	...

08048790 <__FRAME_END__>:
 8048790:	00 00                	add    %al,(%eax)
	...

Disassembly of section .ctors:

08049f14 <__CTOR_LIST__>:
 8049f14:	ff                   	(bad)  
 8049f15:	ff                   	(bad)  
 8049f16:	ff                   	(bad)  
 8049f17:	ff 00                	incl   (%eax)

08049f18 <__CTOR_END__>:
 8049f18:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dtors:

08049f1c <__DTOR_LIST__>:
 8049f1c:	ff                   	(bad)  
 8049f1d:	ff                   	(bad)  
 8049f1e:	ff                   	(bad)  
 8049f1f:	ff 00                	incl   (%eax)

08049f20 <__DTOR_END__>:
 8049f20:	00 00                	add    %al,(%eax)
	...

Disassembly of section .jcr:

08049f24 <__JCR_END__>:
 8049f24:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f28 <_DYNAMIC>:
 8049f28:	01 00                	add    %eax,(%eax)
 8049f2a:	00 00                	add    %al,(%eax)
 8049f2c:	10 00                	adc    %al,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	0c 00                	or     $0x0,%al
 8049f32:	00 00                	add    %al,(%eax)
 8049f34:	78 83                	js     8049eb9 <__FRAME_END__+0x1729>
 8049f36:	04 08                	add    $0x8,%al
 8049f38:	0d 00 00 00 4c       	or     $0x4c000000,%eax
 8049f3d:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 8049f40:	f5                   	cmc    
 8049f41:	fe                   	(bad)  
 8049f42:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f45:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f4c:	7c 82                	jl     8049ed0 <__FRAME_END__+0x1740>
 8049f4e:	04 08                	add    $0x8,%al
 8049f50:	06                   	push   %es
 8049f51:	00 00                	add    %al,(%eax)
 8049f53:	00 cc                	add    %cl,%ah
 8049f55:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f5c:	74 00                	je     8049f5e <_DYNAMIC+0x36>
 8049f5e:	00 00                	add    %al,(%eax)
 8049f60:	0b 00                	or     (%eax),%eax
 8049f62:	00 00                	add    %al,(%eax)
 8049f64:	10 00                	adc    %al,(%eax)
 8049f66:	00 00                	add    %al,(%eax)
 8049f68:	15 00 00 00 00       	adc    $0x0,%eax
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 03                	add    %al,(%ebx)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 f4                	add    %dh,%ah
 8049f75:	9f                   	lahf   
 8049f76:	04 08                	add    $0x8,%al
 8049f78:	02 00                	add    (%eax),%al
 8049f7a:	00 00                	add    %al,(%eax)
 8049f7c:	48                   	dec    %eax
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 14 00             	add    %dl,(%eax,%eax,1)
 8049f82:	00 00                	add    %al,(%eax)
 8049f84:	11 00                	adc    %eax,(%eax)
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	17                   	pop    %ss
 8049f89:	00 00                	add    %al,(%eax)
 8049f8b:	00 30                	add    %dh,(%eax)
 8049f8d:	83 04 08 11          	addl   $0x11,(%eax,%ecx,1)
 8049f91:	00 00                	add    %al,(%eax)
 8049f93:	00 28                	add    %ch,(%eax)
 8049f95:	83 04 08 12          	addl   $0x12,(%eax,%ecx,1)
 8049f99:	00 00                	add    %al,(%eax)
 8049f9b:	00 08                	add    %cl,(%eax)
 8049f9d:	00 00                	add    %al,(%eax)
 8049f9f:	00 13                	add    %dl,(%ebx)
 8049fa1:	00 00                	add    %al,(%eax)
 8049fa3:	00 08                	add    %cl,(%eax)
 8049fa5:	00 00                	add    %al,(%eax)
 8049fa7:	00 fe                	add    %bh,%dh
 8049fa9:	ff                   	(bad)  
 8049faa:	ff 6f 08             	ljmp   *0x8(%edi)
 8049fad:	83 04 08 ff          	addl   $0xffffffff,(%eax,%ecx,1)
 8049fb1:	ff                   	(bad)  
 8049fb2:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fb5:	00 00                	add    %al,(%eax)
 8049fb7:	00 f0                	add    %dh,%al
 8049fb9:	ff                   	(bad)  
 8049fba:	ff 6f f0             	ljmp   *-0x10(%edi)
 8049fbd:	82                   	(bad)  
 8049fbe:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049ff0 <.got>:
 8049ff0:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

08049ff4 <_GLOBAL_OFFSET_TABLE_>:
 8049ff4:	28 9f 04 08 00 00    	sub    %bl,0x804(%edi)
 8049ffa:	00 00                	add    %al,(%eax)
 8049ffc:	00 00                	add    %al,(%eax)
 8049ffe:	00 00                	add    %al,(%eax)
 804a000:	c6 83 04 08 d6 83 04 	movb   $0x4,-0x7c29f7fc(%ebx)
 804a007:	08 e6                	or     %ah,%dh
 804a009:	83 04 08 f6          	addl   $0xfffffff6,(%eax,%ecx,1)
 804a00d:	83 04 08 06          	addl   $0x6,(%eax,%ecx,1)
 804a011:	84 04 08             	test   %al,(%eax,%ecx,1)
 804a014:	16                   	push   %ss
 804a015:	84 04 08             	test   %al,(%eax,%ecx,1)
 804a018:	26 84 04 08          	test   %al,%es:(%eax,%ecx,1)
 804a01c:	36 84 04 08          	test   %al,%ss:(%eax,%ecx,1)
 804a020:	46                   	inc    %esi
 804a021:	84 04 08             	test   %al,(%eax,%ecx,1)

Disassembly of section .data:

0804a024 <__data_start>:
 804a024:	00 00                	add    %al,(%eax)
	...

0804a028 <__dso_handle>:
 804a028:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a02c <completed.6159>:
 804a02c:	00 00                	add    %al,(%eax)
	...

0804a030 <dtor_idx.6161>:
 804a030:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048300>
   a:	74 75                	je     81 <_init-0x80482f7>
   c:	2f                   	das    
   d:	4c                   	dec    %esp
   e:	69 6e 61 72 6f 20 34 	imul   $0x34206f72,0x61(%esi),%ebp
  15:	2e 36 2e 33 2d 31 75 	cs ss xor %cs:%ss:0x75627531,%ebp
  1c:	62 75 
  1e:	6e                   	outsb  %ds:(%esi),(%dx)
  1f:	74 75                	je     96 <_init-0x80482e2>
  21:	35 29 20 34 2e       	xor    $0x2e342029,%eax
  26:	36 2e 33 00          	ss xor %cs:%ss:(%eax),%eax
